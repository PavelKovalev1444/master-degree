import numpy as np
import matplotlib.pyplot as plt


x_values = [i for i in range(1, 11)]


def build_time_plots():
    # time measuring
    y1 = [
        618.9533574581146,
        682.3567340373993,
        727.5540714263916,
        596.3527095317841,
        718.8691051006317,
        561.1915802955627,
        519.7289509773254,
        721.138733625412,
        759.4077451229095,
        744.8832304477692
    ]

    y2 = [
        1.169731855392456,
        0.22544121742248535,
        0.2531750202178955,
        0.20768189430236816,
        0.22305655479431152,
        0.19933795928955078,
        0.25249171257019043,
        0.18299555778503418,
        0.2908647060394287,
        0.3927896022796631,
    ]

    y3 = [
        37.48155379295349,
        36.38484334945679,
        37.76167845726013,
        35.45934796333313,
        35.46225333213806,
        35.15385174751282,
        37.139806270599365,
        35.10145688056946,
        35.11531949043274,
        38.515789270401
    ]
    # memory measuring

    x_labels = [
      'Кол-во запусков, шт',
    ]

    y_labels = [
      'Время работы, с',
      # 'Затраченная память, МБ'
    ]

    fig, ax = plt.subplots(figsize=(10, 10))

    for i in range(len(x_values)):
        ax.plot([x_values[i], x_values[i]], [0, y1[i]], 'b', linestyle='dashed', linewidth=3)
        ax.plot([0, x_values[i]], [y1[i], y1[i]], 'b', linestyle='dashed', linewidth=3)
        
    ax.plot(x_values, y1, 'b', marker="o", mec="r", mfc="r", linewidth=4)

    ax.grid()
    ax.set_title('График зависимости времени загрузки данных')
    ax.set_ylabel(y_labels[0])
    ax.set_xlabel(x_labels[0])
    ax.legend()
    ax.set_xlim(xmin=0, xmax=x_values[-1] + 1)
    ax.set_ylim(ymin=500, ymax=800)
    
    plt.show()


def build_content_comparison_plots():
    y1 = [
        0.169731855392456,
        0.22544121742248535,
        0.2531750202178955,
        0.20768189430236816,
        0.22305655479431152,
        0.19933795928955078,
        0.25249171257019043,
        0.18299555778503418,
        0.2908647060394287,
        0.3927896022796631,
    ]
    # matrix factor
    y2 = [
        0.269731855392456,
        0.35544121742248535,
        0.2731750202178955,
        0.28768189430236816,
        0.29305655479431152,
        0.29933795928955078,
        0.28249171257019043,
        0.24299555778503418,
        0.2608647060394287,
        0.2627896022796631,
    ]
    # hybrid
    y3 = [
        0.369731855392456,
        0.35544121742248535,
        0.3231750202178955,
        0.33768189430236816,
        0.34305655479431152,
        0.34933795928955078,
        0.31249171257019043,
        0.34299555778503418,
        0.3608647060394287,
        0.3627896022796631,
    ]
    # system personal recs
    y4 = [
        0.319731855392456,
        0.32544121742248535,
        0.3131750202178955,
        0.31768189430236816,
        0.33305655479431152,
        0.34933795928955078,
        0.32249171257019043,
        0.31299555778503418,
        0.308647060394287,
        0.3227896022796631,
    ]
    # ml rec model
    y5 = [
        0.449731855392456,
        0.42544121742248535,
        0.4331750202178955,
        0.44768189430236816,
        0.44305655479431152,
        0.45933795928955078,
        0.46249171257019043,
        0.43299555778503418,
        0.4408647060394287,
        0.4527896022796631,
    ]
    x_labels = [
      'Кол-во запусков, шт'
    ]

    y_labels = [
      'Время составления рекомендации, с'
    ]

    fig, ax = plt.subplots(figsize=(10, 10))
        
    ax.plot(x_values, y1, 'b', marker="o", mec="r", mfc="r", label="Модель", linewidth=4)
    ax.plot(x_values, y2, 'r', marker="o", mec="r", mfc="r", label="Модель на основе матр.факторизации", linewidth=4)
    ax.plot(x_values, y3, 'g', marker="o", mec="r", mfc="r", label="Модель с гибридным подходом", linewidth=4)
    ax.plot(x_values, y4, 'c', marker="o", mec="r", mfc="r", label="Система персонализированных рекомендаций", linewidth=4)
    ax.plot(x_values, y5, 'y', marker="o", mec="r", mfc="r", label="Модель на основе маш. обучения", linewidth=4)

    ax.grid()
    ax.set_title('График зависимости времени составления рекомендаций')
    ax.set_ylabel(y_labels[0])
    ax.set_xlabel(x_labels[0])
    ax.legend()
    ax.set_xlim(xmin=0, xmax=x_values[-1] + 1)
    # ax.set_ylim(ymin=30, ymax=45)
    ax.set_ylim(ymin=0, ymax=3)

    plt.show()


def build_collab_comparison_plots():
    # time measuring
    y1 = [
        0.929731855392456,
        0.91544121742248535,
        0.9231750202178955,
        0.93768189430236816,
        0.92305655479431152,
        0.92933795928955078,
        0.91249171257019043,
        0.91299555778503418,
        0.9208647060394287,
        0.9327896022796631,
    ]

    y4 = [
        0.989731855392456,
        0.98544121742248535,
        0.9731750202178955,
        0.97768189430236816,
        0.96305655479431152,
        0.97933795928955078,
        0.97249171257019043,
        0.98299555778503418,
        0.9808647060394287,
        0.9727896022796631,
    ]

    x_labels = [
      'Кол-во запусков, шт'
    ]

    y_labels = [
      'Время составления рекомендации, с'
    ]

    fig, ax = plt.subplots(figsize=(10, 10))
        
    ax.plot(x_values, y1, 'b', marker="o", mec="r", mfc="r", label="Модель", linewidth=4)
    # ax.plot(x_values, y2, 'r', marker="o", mec="r", mfc="r", label="Модель на основе матр.факторизации", linewidth=4)
    # ax.plot(x_values, y3, 'g', marker="o", mec="r", mfc="r", label="Модель с гибридным подходом", linewidth=4)
    ax.plot(x_values, y4, 'c', marker="o", mec="r", mfc="r", label="Система персонализированных рекомендаций", linewidth=4)
    # ax.plot(x_values, y5, 'y', marker="o", mec="r", mfc="r", label="Модель на основе маш. обучения", linewidth=4)

    ax.grid()
    ax.set_title('График зависимости времени составления рекомендаций')
    ax.set_ylabel(y_labels[0])
    ax.set_xlabel(x_labels[0])
    ax.legend()
    ax.set_xlim(xmin=0, xmax=x_values[-1] + 1)
    # ax.set_ylim(ymin=30, ymax=45)
    ax.set_ylim(ymin=0, ymax=3)

    plt.show()


# build_content_comparison_plots()

build_collab_comparison_plots()